- hosts: localhost
  become: yes

  tasks:
  # - name: Remove old versions (Fedora)
  #   package:
  #     - name: "docker,docker-client,docker-client-latest,docker-common,docker-latest,docker-latest-logrotate,docker-logrotate,docker-selinux,docker-engine-selinux,docker-engine"
  - name: Remove old versions (Debian / Ubuntu)
    when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    package:
      name: "docker,docker-engine,docker.io,containerd,runc"
      state: absent

  - name: Set up repository (1/3) - Install curl,gnupg,ca-certificates
    package:
      name: "ca-certificates,curl,gnupg"
      state: latest
      update_cache: yes

  - name: Set up repository (2/3) - Add Docker's GPG key
    # command:
    #   cmd: |
    #     install -m 0755 -d /etc/apt/keyrings
    #     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    #     chmod a+r /etc/apt/keyrings/docker.gpg
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Set up repository (3/3) - Add to sources.list
    # command:
    #   cmd: |
    #     echo \
    #     "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    #     "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    #     tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt_repository:
      repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      state: present

  - name: Install Docker
    package:
      name: "docker-ce,docker-ce-cli,containerd.io,docker-buildx-plugin,docker-compose-plugin"
      state: latest
      update_cache: yes

  - name: Enable & start docker.service
    systemd:
      name: docker.service
      state: started
      enabled: yes
      
  - name: Add daniel to docker group
    user:
      name: daniel
      groups: "docker"
      append: yes
